Index: opensync-2.0.5.0/src/lib/datapipeline/src/dppline.c
===================================================================
--- opensync-2.0.5.0.orig/src/lib/datapipeline/src/dppline.c
+++ opensync-2.0.5.0/src/lib/datapipeline/src/dppline.c
@@ -165,6 +165,8 @@ typedef struct dpp_ucc_stats {
 typedef struct dpp_events_stats {
 	dpp_event_record_session_t *client_event_list;
 	uint32_t client_event_qty;
+	dpp_event_record_dhcp_transaction_t *dhcp_event_list;
+	uint32_t dhcp_event_qty;
 } dppline_events_stats_t;
 
 /* DPP stats type, used as element in internal double ds */
@@ -275,6 +277,30 @@ static void dppline_free_stat(dppline_st
 				free(s->u.events.client_event_list[i].timeout_event);
 		}
 			free(s->u.events.client_event_list);
+		 for (i=0; i<s->u.events.dhcp_event_qty; i++)
+		 {
+			if(s->u.events.dhcp_event_list[i].dhcp_ack_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_ack_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_nak_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_nak_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_offer_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_offer_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_inform_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_inform_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_decline_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_decline_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_request_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_request_event);
+
+			if(s->u.events.dhcp_event_list[i].dhcp_discover_event)
+				free(s->u.events.dhcp_event_list[i].dhcp_discover_event);
+		}
+			free(s->u.events.dhcp_event_list);
 		break;
 
             default:;
@@ -635,11 +661,11 @@ static bool dppline_copysts(dppline_stat
 
 	case DPP_T_EVENTS: {
 		dpp_event_report_data_t *report_data = sts;
-		dpp_event_record_client_t *result = NULL;
+		dpp_event_record_client_t *result_client = NULL;
 		dst->u.events.client_event_qty = 0;
 
 		// Loop through linked list of results and copy results
-		ds_dlist_foreach(&report_data->client_event_list, result)
+		ds_dlist_foreach(&report_data->client_event_list, result_client)
 		{
 			dst->u.events.client_event_qty++;
 		}
@@ -647,14 +673,33 @@ static bool dppline_copysts(dppline_stat
 		size = dst->u.events.client_event_qty * sizeof(dpp_event_record_session_t);
 		dst->u.events.client_event_list = calloc(1, size);
 		int count = 0;
-		ds_dlist_foreach(&report_data->client_event_list, result)
+		ds_dlist_foreach(&report_data->client_event_list, result_client)
 		{
 			assert(count < (int)dst->u.events.client_event_qty);
-			memcpy(&dst->u.events.client_event_list[count], &result->client_session,
+			memcpy(&dst->u.events.client_event_list[count], &result_client->client_session,
 			       sizeof(dpp_event_record_session_t));
 			count++;
 		}
 
+		dpp_event_record_dhcp_t *result_dhcp = NULL;
+		dst->u.events.dhcp_event_qty = 0;
+
+		// Loop through linked list of results and copy results
+		ds_dlist_foreach(&report_data->dhcp_event_list, result_dhcp)
+		{
+			dst->u.events.dhcp_event_qty++;
+		}
+
+		size = dst->u.events.dhcp_event_qty * sizeof(dpp_event_record_dhcp_transaction_t);
+		dst->u.events.dhcp_event_list = calloc(1, size);
+		count = 0;
+		ds_dlist_foreach(&report_data->dhcp_event_list, result_dhcp)
+		{
+			assert(count < (int)dst->u.events.dhcp_event_qty);
+			memcpy(&dst->u.events.dhcp_event_list[count], &result_dhcp->dhcp_transaction,
+					sizeof(dpp_event_record_dhcp_transaction_t));
+			count++;
+		}
 
 	} break;
 
@@ -1859,6 +1904,7 @@ static void dppline_add_stat_events(Sts_
 	Sts__EventReport *sr = NULL;
 
 	uint32_t session = 0;
+	uint32_t transaction = 0;
 	dppline_events_stats_t *events = &s->u.events;
 
 	// increase the number of event_report
@@ -2261,6 +2307,288 @@ static void dppline_add_stat_events(Sts_
 
 	}
 
+	sr->dhcp_transaction = malloc(events->dhcp_event_qty * sizeof(*sr->dhcp_transaction));
+	assert(sr->dhcp_transaction);
+	sr->n_dhcp_transaction = events->dhcp_event_qty;
+
+	for (transaction = 0; transaction < events->dhcp_event_qty; transaction++) {
+
+		dpp_event_record_dhcp_transaction_t *dt_rec = &events->dhcp_event_list[transaction];
+
+		Sts__EventReport__DhcpTransaction *dt = NULL;
+		dt = sr->dhcp_transaction[transaction] = malloc(sizeof(**sr->dhcp_transaction));
+		assert(dt);
+		sts__event_report__dhcp_transaction__init(dt);
+
+		dt->x_id = dt_rec->x_id;
+
+		if(dt_rec->dhcp_ack_event) {
+			Sts__EventReport__DhcpAckEvent *dae;
+			dae = dt->dhcp_ack_event = malloc(sizeof(*dt->dhcp_ack_event));
+			assert(dae);
+			sts__event_report__dhcp_ack_event__init(dae);
+
+			dae->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(dae->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(dae->dhcp_common_data);
+
+			dae->dhcp_common_data->x_id = dt_rec->dhcp_ack_event->dhcp_common_data.x_id;
+
+			dae->dhcp_common_data->vlan_id = dt_rec->dhcp_ack_event->dhcp_common_data.vlan_id;
+
+			dae->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(dae->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_ack_event->dhcp_common_data.dhcp_server_ip, 16);
+			dae->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			dae->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(dae->dhcp_common_data->client_ip.data, dt_rec->dhcp_ack_event->dhcp_common_data.client_ip, 16);
+			dae->dhcp_common_data->client_ip.len = 16;
+
+			dae->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(dae->dhcp_common_data->relay_ip.data, dt_rec->dhcp_ack_event->dhcp_common_data.relay_ip, 16);
+			dae->dhcp_common_data->relay_ip.len = 16;
+
+			dae->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_ack_event->dhcp_common_data.device_mac_address);
+
+			dae->dhcp_common_data->timestamp_ms = dt_rec->dhcp_ack_event->dhcp_common_data.timestamp_ms;
+
+			dae->subnet_mask.data = malloc(16);
+			memcpy(dae->subnet_mask.data, dt_rec->dhcp_ack_event->subnet_mask, 16);
+			dae->subnet_mask.len = 16;
+
+			dae->primary_dns.data = malloc(16);
+			memcpy(dae->primary_dns.data, dt_rec->dhcp_ack_event->primary_dns, 16);
+			dae->primary_dns.len = 16;
+
+			dae->secondary_dns.data = malloc(16);
+			memcpy(dae->secondary_dns.data, dt_rec->dhcp_ack_event->secondary_dns, 16);
+			dae->secondary_dns.len = 16;
+
+			if (dt_rec->dhcp_ack_event->lease_time) {
+				dae->lease_time = dt_rec->dhcp_ack_event->lease_time;
+				dae->has_lease_time = true;
+			}
+
+			if (dt_rec->dhcp_ack_event->renewal_time) {
+				dae->renewal_time = dt_rec->dhcp_ack_event->renewal_time;
+				dae->has_renewal_time = true;
+			}
+
+			if (dt_rec->dhcp_ack_event->rebinding_time) {
+				dae->rebinding_time = dt_rec->dhcp_ack_event->rebinding_time;
+				dae->has_rebinding_time = true;
+			}
+
+			if (dt_rec->dhcp_ack_event->time_offset) {
+				dae->time_offset = dt_rec->dhcp_ack_event->time_offset;
+				dae->has_time_offset = true;
+			}
+
+			dae->gateway_ip.data = malloc(16);
+			memcpy(dae->gateway_ip.data, dt_rec->dhcp_ack_event->gateway_ip, 16);
+			dae->gateway_ip.len = 16;
+		}
+
+		if(dt_rec->dhcp_nak_event) {
+			Sts__EventReport__DhcpNakEvent *dne;
+			dne = dt->dhcp_nak_event = malloc(sizeof(*dt->dhcp_nak_event));
+			assert(dne);
+			sts__event_report__dhcp_nak_event__init(dne);
+
+			dne->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(dne->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(dne->dhcp_common_data);
+
+			dne->dhcp_common_data->x_id = dt_rec->dhcp_nak_event->dhcp_common_data.x_id;
+
+			dne->dhcp_common_data->vlan_id = dt_rec->dhcp_nak_event->dhcp_common_data.vlan_id;
+
+			dne->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(dne->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_nak_event->dhcp_common_data.dhcp_server_ip, 16);
+			dne->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			dne->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(dne->dhcp_common_data->client_ip.data, dt_rec->dhcp_nak_event->dhcp_common_data.client_ip, 16);
+			dne->dhcp_common_data->client_ip.len = 16;
+
+			dne->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(dne->dhcp_common_data->relay_ip.data, dt_rec->dhcp_nak_event->dhcp_common_data.relay_ip, 16);
+			dne->dhcp_common_data->relay_ip.len = 16;
+
+			dne->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_nak_event->dhcp_common_data.device_mac_address);
+
+			dne->dhcp_common_data->timestamp_ms = dt_rec->dhcp_nak_event->dhcp_common_data.timestamp_ms;
+
+			if (dt_rec->dhcp_nak_event->from_internal) {
+				dne->from_internal = dt_rec->dhcp_nak_event->from_internal;
+				dne->has_from_internal = true;
+			}
+		}
+
+		if(dt_rec->dhcp_offer_event) {
+			Sts__EventReport__DhcpOfferEvent *doe;
+			doe = dt->dhcp_offer_event = malloc(sizeof(*dt->dhcp_offer_event));
+			assert(doe);
+			sts__event_report__dhcp_offer_event__init(doe);
+
+			doe->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(doe->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(doe->dhcp_common_data);
+
+			doe->dhcp_common_data->x_id = dt_rec->dhcp_offer_event->dhcp_common_data.x_id;
+
+			doe->dhcp_common_data->vlan_id = dt_rec->dhcp_offer_event->dhcp_common_data.vlan_id;
+
+			doe->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(doe->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_offer_event->dhcp_common_data.dhcp_server_ip, 16);
+			doe->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			doe->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(doe->dhcp_common_data->client_ip.data, dt_rec->dhcp_offer_event->dhcp_common_data.client_ip, 16);
+			doe->dhcp_common_data->client_ip.len = 16;
+
+			doe->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(doe->dhcp_common_data->relay_ip.data, dt_rec->dhcp_offer_event->dhcp_common_data.relay_ip, 16);
+			doe->dhcp_common_data->relay_ip.len = 16;
+
+			doe->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_offer_event->dhcp_common_data.device_mac_address);
+
+			doe->dhcp_common_data->timestamp_ms = dt_rec->dhcp_offer_event->dhcp_common_data.timestamp_ms;
+
+			if (dt_rec->dhcp_offer_event->from_internal) {
+				doe->from_internal = dt_rec->dhcp_offer_event->from_internal;
+				doe->has_from_internal = true;
+			}
+		}
+
+		if(dt_rec->dhcp_inform_event) {
+			Sts__EventReport__DhcpInformEvent *die;
+			die = dt->dhcp_inform_event = malloc(sizeof(*dt->dhcp_inform_event));
+			assert(die);
+			sts__event_report__dhcp_inform_event__init(die);
+
+			die->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(die->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(die->dhcp_common_data);
+
+			die->dhcp_common_data->x_id = dt_rec->dhcp_inform_event->dhcp_common_data.x_id;
+
+			die->dhcp_common_data->vlan_id = dt_rec->dhcp_inform_event->dhcp_common_data.vlan_id;
+
+			die->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(die->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_inform_event->dhcp_common_data.dhcp_server_ip, 16);
+			die->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			die->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(die->dhcp_common_data->client_ip.data, dt_rec->dhcp_inform_event->dhcp_common_data.client_ip, 16);
+			die->dhcp_common_data->client_ip.len = 16;
+
+			die->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(die->dhcp_common_data->relay_ip.data, dt_rec->dhcp_inform_event->dhcp_common_data.relay_ip, 16);
+			die->dhcp_common_data->relay_ip.len = 16;
+
+			die->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_inform_event->dhcp_common_data.device_mac_address);
+
+			die->dhcp_common_data->timestamp_ms = dt_rec->dhcp_inform_event->dhcp_common_data.timestamp_ms;
+		}
+
+		if(dt_rec->dhcp_decline_event) {
+			Sts__EventReport__DhcpDeclineEvent *dde;
+			dde = dt->dhcp_decline_event = malloc(sizeof(*dt->dhcp_decline_event));
+			assert(dde);
+			sts__event_report__dhcp_decline_event__init(dde);
+
+			dde->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(dde->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(dde->dhcp_common_data);
+
+			dde->dhcp_common_data->x_id = dt_rec->dhcp_decline_event->dhcp_common_data.x_id;
+
+			dde->dhcp_common_data->vlan_id = dt_rec->dhcp_decline_event->dhcp_common_data.vlan_id;
+
+			dde->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(dde->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_decline_event->dhcp_common_data.dhcp_server_ip, 16);
+			dde->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			dde->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(dde->dhcp_common_data->client_ip.data, dt_rec->dhcp_decline_event->dhcp_common_data.client_ip, 16);
+			dde->dhcp_common_data->client_ip.len = 16;
+
+			dde->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(dde->dhcp_common_data->relay_ip.data, dt_rec->dhcp_decline_event->dhcp_common_data.relay_ip, 16);
+			dde->dhcp_common_data->relay_ip.len = 16;
+
+			dde->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_decline_event->dhcp_common_data.device_mac_address);
+
+			dde->dhcp_common_data->timestamp_ms = dt_rec->dhcp_decline_event->dhcp_common_data.timestamp_ms;
+		}
+
+		if(dt_rec->dhcp_request_event) {
+			Sts__EventReport__DhcpRequestEvent *dre;
+			dre = dt->dhcp_request_event = malloc(sizeof(*dt->dhcp_request_event));
+			assert(dre);
+			sts__event_report__dhcp_request_event__init(dre);
+
+			dre->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(dre->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(dre->dhcp_common_data);
+
+			dre->dhcp_common_data->x_id = dt_rec->dhcp_request_event->dhcp_common_data.x_id;
+
+			dre->dhcp_common_data->vlan_id = dt_rec->dhcp_request_event->dhcp_common_data.vlan_id;
+
+			dre->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(dre->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_request_event->dhcp_common_data.dhcp_server_ip, 16);
+			dre->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			dre->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(dre->dhcp_common_data->client_ip.data, dt_rec->dhcp_request_event->dhcp_common_data.client_ip, 16);
+			dre->dhcp_common_data->client_ip.len = 16;
+
+			dre->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(dre->dhcp_common_data->relay_ip.data, dt_rec->dhcp_request_event->dhcp_common_data.relay_ip, 16);
+			dre->dhcp_common_data->relay_ip.len = 16;
+
+			dre->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_request_event->dhcp_common_data.device_mac_address);
+
+			dre->dhcp_common_data->timestamp_ms = dt_rec->dhcp_request_event->dhcp_common_data.timestamp_ms;
+
+			dre->hostname = strdup(dt_rec->dhcp_request_event->hostname);
+		}
+
+		if(dt_rec->dhcp_discover_event) {
+			Sts__EventReport__DhcpDiscoverEvent *ddisce;
+			ddisce = dt->dhcp_discover_event = malloc(sizeof(*dt->dhcp_discover_event));
+			assert(ddisce);
+			sts__event_report__dhcp_discover_event__init(ddisce);
+
+			ddisce->dhcp_common_data = malloc(sizeof(Sts__EventReport__DhcpCommonData));
+			assert(ddisce->dhcp_common_data);
+			sts__event_report__dhcp_common_data__init(ddisce->dhcp_common_data);
+
+			ddisce->dhcp_common_data->x_id = dt_rec->dhcp_discover_event->dhcp_common_data.x_id;
+
+			ddisce->dhcp_common_data->vlan_id = dt_rec->dhcp_discover_event->dhcp_common_data.vlan_id;
+
+			ddisce->dhcp_common_data->dhcp_server_ip.data = malloc(16);
+			memcpy(ddisce->dhcp_common_data->dhcp_server_ip.data, dt_rec->dhcp_discover_event->dhcp_common_data.dhcp_server_ip, 16);
+			ddisce->dhcp_common_data->dhcp_server_ip.len = 16;
+
+			ddisce->dhcp_common_data->client_ip.data = malloc(16);
+			memcpy(ddisce->dhcp_common_data->client_ip.data, dt_rec->dhcp_discover_event->dhcp_common_data.client_ip, 16);
+			ddisce->dhcp_common_data->client_ip.len = 16;
+
+			ddisce->dhcp_common_data->relay_ip.data = malloc(16);
+			memcpy(ddisce->dhcp_common_data->relay_ip.data, dt_rec->dhcp_discover_event->dhcp_common_data.relay_ip, 16);
+			ddisce->dhcp_common_data->relay_ip.len = 16;
+
+			ddisce->dhcp_common_data->device_mac_address = strdup(dt_rec->dhcp_discover_event->dhcp_common_data.device_mac_address);
+
+			ddisce->dhcp_common_data->timestamp_ms = dt_rec->dhcp_discover_event->dhcp_common_data.timestamp_ms;
+
+			ddisce->hostname = strdup(dt_rec->dhcp_discover_event->hostname);
+		}
+	}
 }
 
 static void dppline_add_stat_bs_client(Sts__Report *r, dppline_stats_t *s)
